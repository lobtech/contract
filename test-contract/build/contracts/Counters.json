{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/lib/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/lib/math/SafeMath.sol\":{\"keccak256\":\"0xe0bf5e40b2e5caa19aadf87694213166f2a4ff11794bfae10e03ba0004f2c9b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d10d73089eb840bc0b8ceb428f2b9a0f358a118b05615372f5fd4e99591e95d\",\"dweb:/ipfs/QmP676DwwgYqtYXgN1wLoSV7npGd6jQXtaP9NGwzNSpDBk\"]},\"project:/contracts/lib/utils/Counters.sol\":{\"keccak256\":\"0xa7a7346df1b501e71a446b7c1752a346ae7223e31a4c16ce408250485edc5c69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://065308491867d6f8119ec47f931f194900046cd40c5793259bd40da10e605940\",\"dweb:/ipfs/QmT4m3hS9xhR8rmrLDyjZysDMNARt8WLrnZdmgS9yroR6W\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082b2e9fbe711e92abce2ca6af4c0fbf48dbf4c732d8567db4528002563d5ad2664736f6c634300080a0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122082b2e9fbe711e92abce2ca6af4c0fbf48dbf4c732d8567db4528002563d5ad2664736f6c634300080a0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "706:848:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "706:848:36:-:0;;;;;;;;",
  "source": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.4.22 <0.9.0;\npragma experimental ABIEncoderV2;\n\n\nimport \"../math/SafeMath.sol\";\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n * directly accessed.\n */\nlibrary Counters {\n    using SafeMath for uint256;\n\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        // The {SafeMath} overflow check can be skipped here, see the comment at the top\n        counter._value += 1;\n    }\n\n    function decrement(Counter storage counter) internal {\n        counter._value = counter._value.sub(1);\n    }\n}\n",
  "sourcePath": "/home/ec2-user/test-contract/contracts/lib/utils/Counters.sol",
  "ast": {
    "absolutePath": "project:/contracts/lib/utils/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        5571
      ],
      "SafeMath": [
        5120
      ]
    },
    "id": 5572,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5519,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:36"
      },
      {
        "id": 5520,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:36"
      },
      {
        "absolutePath": "project:/contracts/lib/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 5521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5572,
        "sourceUnit": 5121,
        "src": "102:30:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 5522,
          "nodeType": "StructuredDocumentation",
          "src": "134:571:36",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 5571,
        "linearizedBaseContracts": [
          5571
        ],
        "name": "Counters",
        "nameLocation": "714:8:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5525,
            "libraryName": {
              "id": 5523,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5120,
              "src": "735:8:36"
            },
            "nodeType": "UsingForDirective",
            "src": "729:27:36",
            "typeName": {
              "id": 5524,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 5528,
            "members": [
              {
                "constant": false,
                "id": 5527,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "1109:6:36",
                "nodeType": "VariableDeclaration",
                "scope": 5528,
                "src": "1101:14:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5526,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1101:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "769:7:36",
            "nodeType": "StructDefinition",
            "scope": 5571,
            "src": "762:374:36",
            "visibility": "public"
          },
          {
            "body": {
              "id": 5539,
              "nodeType": "Block",
              "src": "1216:38:36",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5536,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5531,
                      "src": "1233:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 5537,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5527,
                    "src": "1233:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5535,
                  "id": 5538,
                  "nodeType": "Return",
                  "src": "1226:21:36"
                }
              ]
            },
            "id": 5540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "1151:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5531,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1175:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5540,
                  "src": "1159:23:36",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 5530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5529,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5528,
                      "src": "1159:7:36"
                    },
                    "referencedDeclaration": 5528,
                    "src": "1159:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:25:36"
            },
            "returnParameters": {
              "id": 5535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5540,
                  "src": "1207:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:9:36"
            },
            "scope": 5571,
            "src": "1142:112:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5552,
              "nodeType": "Block",
              "src": "1313:125:36",
              "statements": [
                {
                  "expression": {
                    "id": 5550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5546,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5543,
                        "src": "1412:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 5548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5527,
                      "src": "1412:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 5549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1430:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1412:19:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5551,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:19:36"
                }
              ]
            },
            "id": 5553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1269:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5543,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1295:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5553,
                  "src": "1279:23:36",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 5542,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5541,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5528,
                      "src": "1279:7:36"
                    },
                    "referencedDeclaration": 5528,
                    "src": "1279:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:25:36"
            },
            "returnParameters": {
              "id": 5545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:36"
            },
            "scope": 5571,
            "src": "1260:178:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5569,
              "nodeType": "Block",
              "src": "1497:55:36",
              "statements": [
                {
                  "expression": {
                    "id": 5567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5559,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5556,
                        "src": "1507:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 5561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5527,
                      "src": "1507:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 5565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1543:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 5562,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5556,
                            "src": "1524:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 5563,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5527,
                          "src": "1524:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4969,
                        "src": "1524:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:21:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1507:38:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5568,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:38:36"
                }
              ]
            },
            "id": 5570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1453:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5556,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1479:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5570,
                  "src": "1463:23:36",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 5555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5554,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5528,
                      "src": "1463:7:36"
                    },
                    "referencedDeclaration": 5528,
                    "src": "1463:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:25:36"
            },
            "returnParameters": {
              "id": 5558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:36"
            },
            "scope": 5571,
            "src": "1444:108:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5572,
        "src": "706:848:36",
        "usedErrors": []
      }
    ],
    "src": "33:1522:36"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/lib/utils/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        5571
      ],
      "SafeMath": [
        5120
      ]
    },
    "id": 5572,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5519,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:36"
      },
      {
        "id": 5520,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:36"
      },
      {
        "absolutePath": "project:/contracts/lib/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 5521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5572,
        "sourceUnit": 5121,
        "src": "102:30:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Counters",
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 5522,
          "nodeType": "StructuredDocumentation",
          "src": "134:571:36",
          "text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`\n Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath}\n overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\n directly accessed."
        },
        "fullyImplemented": true,
        "id": 5571,
        "linearizedBaseContracts": [
          5571
        ],
        "name": "Counters",
        "nameLocation": "714:8:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 5525,
            "libraryName": {
              "id": 5523,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5120,
              "src": "735:8:36"
            },
            "nodeType": "UsingForDirective",
            "src": "729:27:36",
            "typeName": {
              "id": 5524,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "748:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 5528,
            "members": [
              {
                "constant": false,
                "id": 5527,
                "mutability": "mutable",
                "name": "_value",
                "nameLocation": "1109:6:36",
                "nodeType": "VariableDeclaration",
                "scope": 5528,
                "src": "1101:14:36",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5526,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1101:7:36",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nameLocation": "769:7:36",
            "nodeType": "StructDefinition",
            "scope": 5571,
            "src": "762:374:36",
            "visibility": "public"
          },
          {
            "body": {
              "id": 5539,
              "nodeType": "Block",
              "src": "1216:38:36",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 5536,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5531,
                      "src": "1233:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 5537,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 5527,
                    "src": "1233:14:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5535,
                  "id": 5538,
                  "nodeType": "Return",
                  "src": "1226:21:36"
                }
              ]
            },
            "id": 5540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nameLocation": "1151:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5531,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1175:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5540,
                  "src": "1159:23:36",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 5530,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5529,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5528,
                      "src": "1159:7:36"
                    },
                    "referencedDeclaration": 5528,
                    "src": "1159:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1158:25:36"
            },
            "returnParameters": {
              "id": 5535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5534,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5540,
                  "src": "1207:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5533,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1207:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1206:9:36"
            },
            "scope": 5571,
            "src": "1142:112:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5552,
              "nodeType": "Block",
              "src": "1313:125:36",
              "statements": [
                {
                  "expression": {
                    "id": 5550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5546,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5543,
                        "src": "1412:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 5548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5527,
                      "src": "1412:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 5549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1430:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1412:19:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5551,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:19:36"
                }
              ]
            },
            "id": 5553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nameLocation": "1269:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5543,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1295:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5553,
                  "src": "1279:23:36",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 5542,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5541,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5528,
                      "src": "1279:7:36"
                    },
                    "referencedDeclaration": 5528,
                    "src": "1279:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1278:25:36"
            },
            "returnParameters": {
              "id": 5545,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1313:0:36"
            },
            "scope": 5571,
            "src": "1260:178:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5569,
              "nodeType": "Block",
              "src": "1497:55:36",
              "statements": [
                {
                  "expression": {
                    "id": 5567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 5559,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5556,
                        "src": "1507:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 5561,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5527,
                      "src": "1507:14:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 5565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1543:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 5562,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5556,
                            "src": "1524:7:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 5563,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 5527,
                          "src": "1524:14:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4969,
                        "src": "1524:18:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 5566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1524:21:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1507:38:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5568,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:38:36"
                }
              ]
            },
            "id": 5570,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nameLocation": "1453:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5556,
                  "mutability": "mutable",
                  "name": "counter",
                  "nameLocation": "1479:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 5570,
                  "src": "1463:23:36",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "id": 5555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 5554,
                      "name": "Counter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 5528,
                      "src": "1463:7:36"
                    },
                    "referencedDeclaration": 5528,
                    "src": "1463:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$5528_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1462:25:36"
            },
            "returnParameters": {
              "id": 5558,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:0:36"
            },
            "scope": 5571,
            "src": "1444:108:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 5572,
        "src": "706:848:36",
        "usedErrors": []
      }
    ],
    "src": "33:1522:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.10+commit.fc410830.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-12-04T11:19:58.423Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the {SafeMath} overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "kind": "dev",
    "methods": {},
    "title": "Counters",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}